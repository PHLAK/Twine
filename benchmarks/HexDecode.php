<?php

namespace PHLAK\Twine\Benchmarks;

use PHLAK\Twine;
use PHLAK\Twine\Benchmarks\Exceptions\BenchmarkException;

class HexDecode extends Benchmark
{
    /** @var string A short string used for benchmark input */
    protected $shortString = '\x6a\x6f\x68\x6e\x20\x70\x69\x6e\x6b\x65\x72\x74\x6f\x6e';

    /** @var string A long string used for benchmark input */
    protected $longString = '\x4c\x6f\x72\x65\x6d\x20\x69\x70\x73\x75\x6d\x20\x64\x6f\x6c\x6f\x72\x20\x73\x69\x74\x20\x61\x6d\x65\x74\x2c\x20\x63\x6f\x6e\x73\x65\x63\x74\x65\x74\x75\x72\x20\x61\x64\x69\x70\x69\x73\x63\x69\x6e\x67\x20\x65\x6c\x69\x74\x2e\x20\x49\x6e\x74\x65\x67\x65\x72\x20\x6d\x61\x74\x74\x69\x73\x20\x6e\x65\x63\x20\x69\x70\x73\x75\x6d\x20\x68\x65\x6e\x64\x72\x65\x72\x69\x74\x20\x75\x6c\x74\x72\x69\x63\x65\x73\x2e\x20\x50\x65\x6c\x6c\x65\x6e\x74\x65\x73\x71\x75\x65\x20\x68\x61\x62\x69\x74\x61\x6e\x74\x20\x6d\x6f\x72\x62\x69\x20\x74\x72\x69\x73\x74\x69\x71\x75\x65\x20\x73\x65\x6e\x65\x63\x74\x75\x73\x20\x65\x74\x20\x6e\x65\x74\x75\x73\x20\x65\x74\x20\x6d\x61\x6c\x65\x73\x75\x61\x64\x61\x20\x66\x61\x6d\x65\x73\x20\x61\x63\x20\x74\x75\x72\x70\x69\x73\x20\x65\x67\x65\x73\x74\x61\x73\x2e\x20\x41\x65\x6e\x65\x61\x6e\x20\x61\x63\x63\x75\x6d\x73\x61\x6e\x20\x61\x63\x20\x6e\x69\x73\x69\x20\x73\x65\x64\x20\x6c\x75\x63\x74\x75\x73\x2e\x20\x53\x75\x73\x70\x65\x6e\x64\x69\x73\x73\x65\x20\x69\x6e\x74\x65\x72\x64\x75\x6d\x20\x71\x75\x61\x6d\x20\x73\x65\x6d\x2c\x20\x61\x63\x20\x6c\x6f\x62\x6f\x72\x74\x69\x73\x20\x6d\x69\x20\x76\x61\x72\x69\x75\x73\x20\x73\x69\x74\x20\x61\x6d\x65\x74\x2e\x20\x4d\x61\x65\x63\x65\x6e\x61\x73\x20\x73\x69\x74\x20\x61\x6d\x65\x74\x20\x6a\x6f\x68\x6e\x20\x70\x69\x6e\x6b\x65\x72\x74\x6f\x6e\x20\x6d\x6f\x6c\x65\x73\x74\x69\x65\x20\x74\x75\x72\x70\x69\x73\x2e\x20\x53\x65\x64\x20\x70\x75\x6c\x76\x69\x6e\x61\x72\x20\x66\x61\x75\x63\x69\x62\x75\x73\x20\x65\x6c\x69\x74\x20\x65\x74\x20\x76\x61\x72\x69\x75\x73\x2e\x20\x41\x6c\x69\x71\x75\x61\x6d\x20\x64\x69\x67\x6e\x69\x73\x73\x69\x6d\x20\x65\x72\x61\x74\x20\x76\x69\x74\x61\x65\x20\x75\x6c\x74\x72\x69\x63\x65\x73\x20\x74\x65\x6d\x70\x75\x73\x2e\x20\x53\x65\x64\x20\x6e\x69\x73\x69\x20\x6d\x61\x75\x72\x69\x73\x2c\x20\x6f\x72\x6e\x61\x72\x65\x20\x76\x69\x74\x61\x65\x20\x65\x6e\x69\x6d\x20\x65\x75\x2c\x20\x67\x72\x61\x76\x69\x64\x61\x20\x70\x68\x61\x72\x65\x74\x72\x61\x20\x6e\x65\x71\x75\x65\x2e\x20\x50\x65\x6c\x6c\x65\x6e\x74\x65\x73\x71\x75\x65\x20\x76\x65\x6c\x20\x74\x75\x72\x70\x69\x73\x20\x69\x6e\x20\x74\x6f\x72\x74\x6f\x72\x20\x6d\x61\x74\x74\x69\x73\x20\x62\x69\x62\x65\x6e\x64\x75\x6d\x2e\x20\x44\x6f\x6e\x65\x63\x20\x74\x65\x6d\x70\x6f\x72\x20\x76\x65\x6c\x20\x65\x73\x74\x20\x75\x74\x20\x63\x75\x72\x73\x75\x73\x2e\x20\x50\x68\x61\x73\x65\x6c\x6c\x75\x73\x20\x68\x65\x6e\x64\x72\x65\x72\x69\x74\x20\x73\x65\x6d\x70\x65\x72\x20\x70\x6c\x61\x63\x65\x72\x61\x74\x2e\x20\x53\x65\x64\x20\x75\x6c\x74\x72\x69\x63\x65\x73\x2c\x20\x74\x6f\x72\x74\x6f\x72\x20\x75\x74\x20\x6c\x75\x63\x74\x75\x73\x20\x76\x6f\x6c\x75\x74\x70\x61\x74\x2c\x20\x6d\x65\x74\x75\x73\x20\x65\x73\x74\x20\x75\x6c\x6c\x61\x6d\x63\x6f\x72\x70\x65\x72\x20\x73\x65\x6d\x2c\x20\x6e\x65\x63\x20\x75\x6c\x6c\x61\x6d\x63\x6f\x72\x70\x65\x72\x20\x61\x6e\x74\x65\x20\x64\x69\x61\x6d\x20\x63\x6f\x6e\x64\x69\x6d\x65\x6e\x74\x75\x6d\x20\x76\x65\x6c\x69\x74\x2e';

    /**
     * The Twine method benchmark.
     *
     * @param \PHLAK\Twine\Str $input
     *
     * @return void
     */
    protected function twineBenchmark(Twine\Str $input)
    {
        $input->hexDecode();
    }

    /**
     * The native PHP benchmark.
     *
     * @param string $input
     *
     * @return void
     */
    protected function nativeBenchmark(string $input)
    {
        throw new BenchmarkException('No equivilent native method availabe');
    }
}
